import numpy as np
import pandas as pd
import random
import string
from datetime import date

MinAmountforClaim = 100
MaxAmountforClaim = 10000
number_of_elements_in_list = 20
starting_year = 2010
starting_month = 1
starting_day = 1
number_of_rows_in_df = 50

names = ['Jordan', 'Bill', 'Andy', 'Felix', 'Mark', 'Tom', 'Alex', 'Jack', 'Sam', 'Ben', 'Liam', 'Tony', 'Gary', 'Simon', 'Steve', 'Darren', 'Max', 'Ryan', 'Sean', 'Adam']
surnames = ['Jones', 'Smith', 'Nichols', 'Bartlam', 'Andrews', 'Adams', 'Kane', 'Lampard', 'Beckham', 'Gerrard', 'Scholes', 'Johnson', 'Merson', 'Rooney', 'Crouch', 'Ince', 'Grahams', 'Obama', 'Trump', 'Cruz']
postcodes = []
dates = []
my_index = []


# Postcode
for i in range(number_of_elements_in_list):
    postcodes.append((random.choice(string.ascii_uppercase))+(random.choice(string.ascii_uppercase))+(str(random.randrange(1,9)))+' '+(str(random.randrange(1,9)))+(random.choice(string.ascii_uppercase))+(random.choice(string.ascii_uppercase)))

# Date
start_dt = date(2010, 1, 1).toordinal()
end_dt = date.today().toordinal()

def gen_random_date():
    return date.fromordinal(random.randint(start_dt, end_dt))
    
for i in range(number_of_elements_in_list):
    dates.append(gen_random_date())


df = pd.DataFrame(columns=['First Name', 'Surname', 'Amount', 'Postcode', 'Date'])
for i in range(number_of_rows_in_df):
    df = df.append({'First Name': random.choice(names), 'Surname': random.choice(surnames), 'Amount': random.randrange(MinAmountforClaim, MaxAmountforClaim), 'Postcode': random.choice(postcodes), 'Date': random.choice(dates)}, ignore_index=True)



        

def replace_random_field():
    global random_person
    random_person = df.loc[[random.randint(0, 49)]].copy()
    random_column_number = random.randint(0,5)
    print(random_person)
    
    def replacement_value():
        if random_column_number == 0:
            return random.choice(names)
        if random_column_number == 1:
            return random.choice(surnames)
        if random_column_number == 2:
            return random.randrange(MinAmountforClaim, MaxAmountforClaim)
        if random_column_number == 3:
            return random.choice(postcodes)
        if random_column_number == 4:
            return random.choice(dates)
    
    random_person.iloc[:, (random_column_number)] = [replacement_value()]
    print('The column number we are changing is: '+str(random_column_number))
    print(random_person)
    
replace_random_field()


